{
  "api": {
    "name": "SystemInfoPlugin",
    "slug": "systeminfoplugin",
    "docs": "Interface for the System Info plugin",
    "tags": [],
    "methods": [
      {
        "name": "getInfos",
        "signature": "() => Promise<SystemInformations>",
        "parameters": [],
        "returns": "Promise<SystemInformations>",
        "tags": [
          {
            "name": "returns",
            "text": "SystemInformations"
          }
        ],
        "docs": "Returns a Promise that resolves with an object containing system information.",
        "complexTypes": [
          "SystemInformations"
        ],
        "slug": "getinfos"
      },
      {
        "name": "start",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "Starts listening for system information changes.",
        "complexTypes": [],
        "slug": "start"
      },
      {
        "name": "stop",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "Stops listening for system information changes.",
        "complexTypes": [],
        "slug": "stop"
      },
      {
        "name": "addListener",
        "signature": "(eventName: 'runtimeChange', listenerFunc: (event: RuntimeInfos) => void) => Promise<PluginListenerHandle>",
        "parameters": [
          {
            "name": "eventName",
            "docs": "- The name of the event to listen for.",
            "type": "'runtimeChange'"
          },
          {
            "name": "listenerFunc",
            "docs": "- The function to call when the event is triggered.",
            "type": "(event: RuntimeInfos) => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle>",
        "tags": [
          {
            "name": "param",
            "text": "eventName - The name of the event to listen for."
          },
          {
            "name": "param",
            "text": "listenerFunc - The function to call when the event is triggered."
          },
          {
            "name": "returns",
            "text": "PluginListenerHandle"
          }
        ],
        "docs": "Adds a listener for the 'runtimeChange' event.",
        "complexTypes": [
          "PluginListenerHandle",
          "RuntimeInfos"
        ],
        "slug": "addlistenerruntimechange"
      },
      {
        "name": "removeAllListeners",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "Removes all event listeners.",
        "complexTypes": [],
        "slug": "removealllisteners"
      }
    ],
    "properties": []
  },
  "interfaces": [
    {
      "name": "SoftwareInfos",
      "slug": "softwareinfos",
      "docs": "Represents software information about a device.",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "osName",
          "tags": [],
          "docs": "The name of the operating system.",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "osVersion",
          "tags": [],
          "docs": "The version of the operating system.",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "brandName",
          "tags": [],
          "docs": "The name of the device brand.",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "sdkVersion",
          "tags": [],
          "docs": "The version of the SDK (if applicable).",
          "complexTypes": [],
          "type": "number | undefined"
        },
        {
          "name": "sdkName",
          "tags": [],
          "docs": "The name of the SDK (if applicable).",
          "complexTypes": [],
          "type": "string | undefined"
        },
        {
          "name": "securityPatch",
          "tags": [],
          "docs": "The security patch level (if applicable).",
          "complexTypes": [],
          "type": "string | undefined"
        },
        {
          "name": "uiVersion",
          "tags": [],
          "docs": "The version of the UI (if applicable).",
          "complexTypes": [],
          "type": "string | undefined"
        },
        {
          "name": "deviceID",
          "tags": [],
          "docs": "The unique identifier of the device (if applicable).",
          "complexTypes": [],
          "type": "string | undefined"
        },
        {
          "name": "boardName",
          "tags": [],
          "docs": "The name of the device board (if applicable).",
          "complexTypes": [],
          "type": "string | undefined"
        },
        {
          "name": "bootloaderVersion",
          "tags": [],
          "docs": "The version of the bootloader (if applicable).",
          "complexTypes": [],
          "type": "string | undefined"
        },
        {
          "name": "supportedABIs",
          "tags": [],
          "docs": "The list of supported ABIs (if applicable).",
          "complexTypes": [],
          "type": "string[] | undefined"
        }
      ]
    },
    {
      "name": "HardwareInfos",
      "slug": "hardwareinfos",
      "docs": "Represents hardware information of a device.",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "modelID",
          "tags": [],
          "docs": "The model ID of the device.",
          "complexTypes": [],
          "type": "string | undefined"
        },
        {
          "name": "modelCodeName",
          "tags": [],
          "docs": "The code name of the device model.",
          "complexTypes": [],
          "type": "string | undefined"
        },
        {
          "name": "cpuModel",
          "tags": [],
          "docs": "The model of the CPU.",
          "complexTypes": [],
          "type": "string | undefined"
        },
        {
          "name": "cpuCores",
          "tags": [],
          "docs": "The number of cores and threads of the CPU.",
          "complexTypes": [],
          "type": "[number, number][] | undefined"
        },
        {
          "name": "totalSD",
          "tags": [],
          "docs": "The total size of the SD card in bytes.",
          "complexTypes": [],
          "type": "number | undefined"
        },
        {
          "name": "totalHDD",
          "tags": [],
          "docs": "The total size of the HDD in bytes.",
          "complexTypes": [],
          "type": "number"
        },
        {
          "name": "totalRAM",
          "tags": [],
          "docs": "The total size of the RAM in bytes.",
          "complexTypes": [],
          "type": "number"
        },
        {
          "name": "totalCores",
          "tags": [],
          "docs": "The total number of cores in the CPU.",
          "complexTypes": [],
          "type": "number"
        },
        {
          "name": "manufacturer",
          "tags": [],
          "docs": "The manufacturer of the device.",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "features",
          "tags": [],
          "docs": "The features supported by the device.",
          "complexTypes": [
            "Features"
          ],
          "type": "Features[]"
        }
      ]
    },
    {
      "name": "PluginListenerHandle",
      "slug": "pluginlistenerhandle",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "remove",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "() => Promise<void>"
        }
      ]
    },
    {
      "name": "RuntimeInfos",
      "slug": "runtimeinfos",
      "docs": "Interface for runtime information.",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "usedRAM",
          "tags": [],
          "docs": "The amount of used RAM in bytes.",
          "complexTypes": [],
          "type": "number | undefined"
        },
        {
          "name": "usedHDD",
          "tags": [],
          "docs": "The amount of used HDD in bytes.",
          "complexTypes": [],
          "type": "number | undefined"
        },
        {
          "name": "usedSD",
          "tags": [],
          "docs": "The amount of used SD card storage in bytes.",
          "complexTypes": [],
          "type": "number | undefined"
        }
      ]
    }
  ],
  "enums": [],
  "typeAliases": [
    {
      "name": "SystemInformations",
      "slug": "systeminformations",
      "docs": "Represents a collection of system information, including both software and hardware information.",
      "types": [
        {
          "text": "SoftwareInfos & HardwareInfos",
          "complexTypes": [
            "SoftwareInfos",
            "HardwareInfos"
          ]
        }
      ]
    },
    {
      "name": "Features",
      "slug": "features",
      "docs": "Represents the available features that can be queried using the Capacitor System Info plugin.",
      "types": [
        {
          "text": "'bluetooth'",
          "complexTypes": []
        },
        {
          "text": "'bluetoothLowEnergy'",
          "complexTypes": []
        },
        {
          "text": "'microphone'",
          "complexTypes": []
        },
        {
          "text": "'speaker'",
          "complexTypes": []
        },
        {
          "text": "'nfc'",
          "complexTypes": []
        },
        {
          "text": "'camera'",
          "complexTypes": []
        },
        {
          "text": "'gamepad'",
          "complexTypes": []
        },
        {
          "text": "'gps'",
          "complexTypes": []
        },
        {
          "text": "'touchscreen'",
          "complexTypes": []
        },
        {
          "text": "'wifi'",
          "complexTypes": []
        },
        {
          "text": "'fingerprint'",
          "complexTypes": []
        },
        {
          "text": "'face'",
          "complexTypes": []
        },
        {
          "text": "'ethernet'",
          "complexTypes": []
        }
      ]
    }
  ],
  "pluginConfigs": []
}