{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAC5C,OAAO,QAAQ,MAAM,UAAU,CAAC;AAIhC,MAAM,OAAO,aAAc,SAAQ,SAAS;IAC1C,KAAK,CAAC,QAAQ;;QACZ,MAAM,QAAQ,GAAe,EAAE,CAAC;QAEhC,IAAI,YAAY,IAAI,MAAM;YAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACjD,IAAI,WAAW,IAAI,SAAS;YAAE,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACzD,IAAI,aAAa,IAAI,SAAS;YAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACrD,IAAI,SAAS,CAAC,cAAc,GAAG,CAAC;YAAE,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAE/D,MAAM,OAAO,GAAG,MAAM,SAAS,CAAC,YAAY,CAAC,gBAAgB,EAAE,CAAC;QAChE,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,YAAY,CAAC;YAAE,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC1E,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,aAAa,CAAC;YAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC5E,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,YAAY,CAAC;YAAE,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAE9E,MAAM,QAAQ,GAAG,cAAc,IAAI,SAAS,CAAC,CAAC,CAAE,SAAS,CAAC,YAAuB,CAAC,CAAC,CAAC,CAAC,CAAC;QAEtF,MAAM,QAAQ,GAAG,SAAS,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,MAAA,CAAC,MAAM,SAAS,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,KAAK,mCAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAChG,qCAAqC;QACrC,MAAM,QAAQ,GAAG,QAAQ,CAAC,CAAC,QAAQ,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QAE7D,OAAO;YACL,MAAM,EAAE,MAAA,MAAA,QAAQ,CAAC,EAAE,0CAAE,MAAM,mCAAI,SAAS;YACxC,SAAS,EAAE,MAAA,MAAA,QAAQ,CAAC,EAAE,0CAAE,OAAO,mCAAI,SAAS;YAC5C,SAAS,EAAE,MAAA,QAAQ,CAAC,OAAO,mCAAI,SAAS;YACxC,YAAY,EAAE,MAAA,QAAQ,CAAC,YAAY,mCAAI,SAAS;YAChD,QAAQ;YACR,QAAQ;YACR,UAAU,EAAE,qBAAqB,IAAI,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;YAClF,QAAQ;SACoB,CAAC;IACjC,CAAC;IAED,KAAK,CAAC,KAAK;QACT,MAAM,IAAI,CAAC,WAAW,CAAC,+CAA+C,CAAC,CAAC;IAC1E,CAAC;IAED,KAAK,CAAC,IAAI;QACR,MAAM,IAAI,CAAC,WAAW,CAAC,+CAA+C,CAAC,CAAC;IAC1E,CAAC;CACF","sourcesContent":["import { WebPlugin } from '@capacitor/core';\nimport platform from 'platform';\n\nimport type { SystemInformations, Features, SystemInfoPlugin } from './definitions';\n\nexport class SystemInfoWeb extends WebPlugin implements SystemInfoPlugin {\n  async getInfos(): Promise<SystemInformations> {\n    const features: Features[] = [];\n\n    if ('NDEFReader' in window) features.push('nfc');\n    if ('bluetooth' in navigator) features.push('bluetooth');\n    if ('geolocation' in navigator) features.push('gps');\n    if (navigator.maxTouchPoints > 0) features.push('touchscreen');\n\n    const devices = await navigator.mediaDevices.enumerateDevices();\n    if (devices.some((d) => d.kind === 'videoinput')) features.push('camera');\n    if (devices.some((d) => d.kind === 'audiooutput')) features.push('speaker');\n    if (devices.some((d) => d.kind === 'audioinput')) features.push('microphone');\n\n    const totalRAM = 'deviceMemory' in navigator ? (navigator.deviceMemory as number) : 0;\n\n    const estimate = 'storage' in navigator ? ((await navigator.storage.estimate()).quota ?? 0) : 0;\n    // Not real total, it's the available\n    const totalHDD = parseInt((estimate / 1024 ** 3).toFixed(2));\n\n    return {\n      osName: platform.os?.family ?? 'Unknown',\n      osVersion: platform.os?.version ?? 'Unknown',\n      brandName: platform.product ?? 'Unknown',\n      manufacturer: platform.manufacturer ?? 'Unknown',\n      totalRAM,\n      totalHDD,\n      totalCores: 'hardwareConcurrency' in navigator ? navigator.hardwareConcurrency : 1,\n      features,\n    } satisfies SystemInformations;\n  }\n\n  async start(): Promise<void> {\n    throw this.unavailable('Listener not available in browser environment');\n  }\n\n  async stop(): Promise<void> {\n    throw this.unavailable('Listener not available in browser environment');\n  }\n}\n"]}