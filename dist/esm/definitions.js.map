{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["import type { PluginListenerHandle } from '@capacitor/core';\n\nexport interface RuntimeInfos {\n  usedRAM?: number;\n  usedHDD?: number;\n  usedSD?: number;\n  //usedCPU?: number;\n}\n\nexport interface SoftwareInfos {\n  osName: string;\n  osVersion: string;\n  brandName: string;\n  sdkVersion?: number;\n  sdkName?: string;\n  securityPatch?: string;\n  uiVersion?: string;\n  deviceID?: string;\n  boardName?: string;\n  bootloaderVersion?: string;\n  supportedABIs?: string[];\n}\n\nexport type Features =\n  | 'bluetooth'\n  | 'bluetoothLowEnergy'\n  | 'microphone'\n  | 'speaker'\n  | 'nfc'\n  | 'camera'\n  | 'gamepad'\n  | 'gps'\n  | 'touchscreen'\n  | 'wifi'\n  | 'fingerprint'\n  | 'face'\n  | 'ethernet';\n\nexport interface HardwareInfos {\n  modelID?: string;\n  modelCodeName?: string;\n  cpuModel?: string;\n  cpuCores?: [number, number][];\n  totalSD?: number;\n  totalHDD: number;\n  totalRAM: number;\n  totalCores: number;\n  manufacturer: string;\n  features: Features[];\n}\n\nexport type SystemInformations = SoftwareInfos & HardwareInfos;\n\nexport interface SystemInfoPlugin {\n  getInfos(): Promise<SystemInformations>;\n  start(): Promise<void>;\n  stop(): Promise<void>;\n  addListener(eventName: 'runtimeChange', listenerFunc: (event: RuntimeInfos) => void): Promise<PluginListenerHandle>;\n  removeAllListeners(): Promise<void>;\n}\n"]}